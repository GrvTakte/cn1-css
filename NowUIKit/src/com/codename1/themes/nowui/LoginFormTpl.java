/* THIS FILE IS AUTOMATICALLY GENERATED-- DO NOT MODIFY IT*/
package com.codename1.themes.nowui;

import com.codename1.ui.*;
import com.codename1.components.*;
import com.codename1.ui.layouts.*;
import com.codename1.ui.table.*;
import com.codename1.ui.util.*;

class LoginFormTpl {

    private Container rootContainer;
    private Resources resources;

    public Container getRoot() {
        if (rootContainer == null) {
            try {
                rootContainer = buildUI();
            } catch (Exception ex) {
                ex.printStackTrace();
                throw new RuntimeException(ex.getMessage());
            }
        }
        return rootContainer;
    }
    private java.util.Map<String, Component> _nameIndex = new java.util.HashMap<String, Component>();

    public Component get(String name) {
        getRoot();
        return _nameIndex.get(name);
    }

    public LoginFormTpl(java.util.Map context) {
        for (Object o : context.values()) {
            if (o instanceof Resources) {
                resources = (Resources) o;
            }
        }
    }

    private Container buildUI() throws Exception {
        Container root = new Container();
        BorderLayout rootLayout = new BorderLayout();
        root.setLayout(rootLayout);
        root.setUIID("NUILoginForm");
        Container node1 = new Container();
        FlowLayout node1Layout = new FlowLayout(Component.CENTER);
        node1.setLayout(node1Layout);
        init1_node1(node1, root);
        node1.addComponent(new Label(resources.getImage("NowLogo.png")));
        if (node1.getClientProperty("__CN1ML_NO_ADD__") == null && root != node1.getParent()) {
            root.addComponent(BorderLayout.CENTER, node1);
        }
        Container node2 = new Container();
        BoxLayout node2Layout = new BoxLayout(BoxLayout.Y_AXIS);
        node2.setLayout(node2Layout);
        Container node3 = new Container();
        BorderLayout node3Layout = new BorderLayout();
        node3.setLayout(node3Layout);
        Container node4 = new Container();
        BoxLayout node4Layout = new BoxLayout(BoxLayout.Y_AXIS);
        node4.setLayout(node4Layout);
        node4.setName("testPath");
        _nameIndex.put("testPath", node4);
        if (node4.getClientProperty("__CN1ML_NO_ADD__") == null && node3 != node4.getParent()) {
            node3.addComponent(BorderLayout.EAST, node4);
        }
        if (node3.getClientProperty("__CN1ML_NO_ADD__") == null && node2 != node3.getParent()) {
            node2.addComponent(node3);
        }
        TextField node5 = new TextField();
        node5.setName("usernameField");
        _nameIndex.put("usernameField", node5);
        init2_node5(node5, node2);
        if (node5.getClientProperty("__CN1ML_NO_ADD__") == null && node2 != node5.getParent()) {
            node2.addComponent(node5);
        }
        TextField node6 = new TextField();
        node6.setConstraint(TextArea.PASSWORD);
        node6.setName("passwordField");
        _nameIndex.put("passwordField", node6);
        init3_node6(node6, node2);
        if (node6.getClientProperty("__CN1ML_NO_ADD__") == null && node2 != node6.getParent()) {
            node2.addComponent(node6);
        }
        Button node7 = new Button();
        node7.setName("submitButton");
        _nameIndex.put("submitButton", node7);
        node7.setText("Get Started");
        if (node7.getClientProperty("__CN1ML_NO_ADD__") == null && node2 != node7.getParent()) {
            node2.addComponent(node7);
        }
        Container node8 = new Container();
        BorderLayout node8Layout = new BorderLayout();
        node8.setLayout(node8Layout);
        Button node9 = new Button();
        node9.setUIID("NUILinkButtonLight");
        node9.setName("signupButton");
        _nameIndex.put("signupButton", node9);
        node9.setText("Create Account");
        if (node9.getClientProperty("__CN1ML_NO_ADD__") == null && node8 != node9.getParent()) {
            node8.addComponent(BorderLayout.WEST, node9);
        }
        Button node10 = new Button();
        node10.setUIID("NUILinkButtonLight");
        node10.setName("helpButton");
        _nameIndex.put("helpButton", node10);
        node10.setText("Need Help?");
        if (node10.getClientProperty("__CN1ML_NO_ADD__") == null && node8 != node10.getParent()) {
            node8.addComponent(BorderLayout.EAST, node10);
        }
        if (node8.getClientProperty("__CN1ML_NO_ADD__") == null && node2 != node8.getParent()) {
            node2.addComponent(node8);
        }
        if (node2.getClientProperty("__CN1ML_NO_ADD__") == null && root != node2.getParent()) {
            root.addComponent(BorderLayout.SOUTH, node2);
        }
        return root;
    }

    private void init1_node1(Container self, Container parent) {
        ((FlowLayout) self.getLayout()).setValign(Component.CENTER);
    }

    public Container getTestPath() {
        return (Container) get("testPath");
    }

    public TextField getUsernameField() {
        return (TextField) get("usernameField");
    }

    private void init2_node5(TextField self, Container parent) {
        self.setHint("Username");

    }

    public TextField getPasswordField() {
        return (TextField) get("passwordField");
    }

    private void init3_node6(TextField self, Container parent) {
        self.setHint("Password");

    }

    public Button getSubmitButton() {
        return (Button) get("submitButton");
    }

    public Button getSignupButton() {
        return (Button) get("signupButton");
    }

    public Button getHelpButton() {
        return (Button) get("helpButton");
    }
}
